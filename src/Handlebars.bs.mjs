// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Fs from "fs";
import * as Url from "url";
import * as Path from "path";
import * as Js_exn from "rescript/lib/es6/js_exn.js";
import * as JSONSchema from "rescript-json-schema/src/JSONSchema.bs.mjs";
import Handlebars from "handlebars";
import * as S$RescriptStruct from "rescript-struct/src/S.bs.mjs";
import * as HandlebarsJsHelpersMjs from "./handlebarsJsHelpers.mjs";

function registerJSHandlebarHelpers(prim) {
  HandlebarsJsHelpersMjs.registerJSHandlebarHelpers();
}

HandlebarsJsHelpersMjs.registerJSHandlebarHelpers();

Handlebars.registerHelper("structify", (function (jsonSchema) {
        if (jsonSchema !== undefined) {
          return S$RescriptStruct.inline(JSONSchema.toStruct(jsonSchema));
        } else {
          return Js_exn.raiseError("no arg supplied to structify handlebars helper");
        }
      }));

var esmDirname = Url.fileURLToPath(new Url.URL(".", import.meta.url));

var templageFilePath = Path.join(esmDirname, "template.hbs");

var templateFile = Fs.readFileSync(templageFilePath, {
      encoding: "utf8"
    });

var compileTemplate = Handlebars.compile(templateFile);

export {
  registerJSHandlebarHelpers ,
  esmDirname ,
  templageFilePath ,
  templateFile ,
  compileTemplate ,
}
/*  Not a pure module */
