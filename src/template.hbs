module Api = {
{{#each paths}}
  {{setVariable 'apiPath' @key}}

  {{#each this}}
    module {{capitalize this.operationId}} = {
      let apiPath = "{{@root.apiPath}}"
      let httpVerb = "{{@key}}"

      {{!-- https://swagger.io/specification/#parameter-object --}}
      {{#if (paramContainsParamType 'path' parameters)}}
        module PathParams = {
          {{#each parameters}}
            {{#if (eq in 'path')}}
              {{#if schema.enum}}
                type {{name}} = {{#unless required}}option<{{/unless}}{{stringEnumToPolyVariant schema.enum}}{{#unless required}}>{{/unless}}
              {{else}}
                type {{name}} = {{#unless required}}option<{{/unless}}{{schema.type}}{{#unless required}}>{{/unless}}
              {{/if}}
            {{/if}}
          {{/each}}
        }
      {{/if}}

      {{#if (paramContainsParamType 'query' parameters)}}
        module QueryParams = {
          {{#each parameters}}
            {{#if (eq in 'query')}}
              {{#if schema.enum}}
                type {{name}} = {{#unless required}}option<{{/unless}}{{stringEnumToPolyVariant schema.enum}}{{#unless required}}>{{/unless}}
              {{else}}
                type {{name}} = {{#unless required}}option<{{/unless}}{{schema.type}}{{#unless required}}>{{/unless}}
              {{/if}}
            {{/if}}
          {{/each}}
        }
      {{/if}}

      {{#each requestBody.content}}
        let {{../operationId}}RequestBody = {{{structify schema}}}
      {{/each}}

      {{#each responses}}
        {{#each content}}
          {{!-- Can have empty responses so check if schema truthy --}}
          {{#if schema}}
            let {{../../operationId}}Response = {{{structify schema}}}
          {{/if}}
        {{/each}}
      {{/each}}
    }
  {{/each}}
{{/each}}
}